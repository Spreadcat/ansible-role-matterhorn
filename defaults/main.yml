---
# Set the state of matterhorn on the target host.
# If set to `latest`, the role will check for the latest release online
# and update the local installation if it is lower than the remote one.
# If set to `latest` and _matterhorn_release_url_ is set, the specified tar.bz2 package will
# be installed in any case.
# If set to present, matterhorn will be installed if missing, otherwise not.
#
# Example:
#   matterhorn_state: "latest"
#
matterhorn_state: "present"

# Sets the hosts user account to use when placing the config file and
# giving file permissions. The user must exist.
#
# Example:
#   matterhorn_username: "jdoe"
#
matterhorn_username: "{{ lookup('env', 'USER') }}"

# Sets the groupname for filepermissions on the destination host.
# The group must exist.
#
# Example:
#   matterhorn_groupname: "jdoe"
#
matterhorn_groupname: "{{ lookup('env', 'USER') }}"

# Sets the path to the userhome in which the configuration
# file will be deployed.
#
# Example:
#   matterhorn_userhome: "/home/jdoe"
#
matterhorn_userhome: "{{ lookup('env', 'HOME') }}"

# Sets the destination directory in which the binary file of matterhorn will be placed.
# This assumes a system wide accessible directory. The file ownership will be the root account.
#
# Example:
#   matterhorn_Dest_dir: "/usr/bin"
#
matterhorn_dest_dir: "/usr/bin"

# Sets the path to where the matterhorn configuration file will be placed.
#
# Example:
#   matterhorn_config_dir: "/home/jdoe/.config/matterhorn"
matterhorn_config_dir: "{{ matterhorn_userhome }}/.config/matterhorn"

# Set the filename of the configuration file for matterhorn within the configuration
# directory.
#
# Example:
#   matterhorn_config_file: "config.ini"
#
matterhorn_config_file: "config.ini"

# If set to true any existing configuration file at matterhorn_config_dir will be overwritten
# and the values replaced with the settings from this role.
#
# Example:
#   matterhorn_config_file_overwrite: true
#
matterhorn_config_file_overwrite: false

# See https://github.com/matterhorn-chat/matterhorn/blob/master/docs/sample-config.ini for a list
# and other examples for these configuration settings

# Username. Optional. If empty, you'll be asked to provide one on
# startup.
#
# Example:
#   matterhorn_mattermost_user: <username>
#
matterhorn_mattermost_username: ''

# Hostname: Optional. If empty, you'll be asked to provide one on
# startup. Note that this is just the IP address or hostname of the
# server; it should not include anything else such as URL scheme, path,
# etc.
#
# Example:
#   matterhorn_mattermost_host: <hostname>
#
matterhorn_mattermost_host: ''

# If the team setting is set, it must be the name of a team of which
# the user is a member. This is the team you'll automatically use when
# connecting and you'll bypass the team selection. If the setting is
# absent or isn't one of your teams, you'll be prompted for a choice of
# your teams.
#
# Example:
#   matterhorn_mattermost_team: <team name>
#
matterhorn_mattermost_team: ''

# Server port. Optional; NOTE: If you are not using TLS
# and intend to use another port, you MUST set the port accordingly and
# then set unsafeUseUnauthenticatedConnection to disable TLS. Matterhorn
# uses TLS by default regardless of the port value.
#
# Example:
#   matterhorn_mattermost_port: 443
#
matterhorn_mattermost_port: '443'

# Server URL path. If the Mattermost server is located at
# https://example.com/mattermost then this would be set to
# /mattermost. Optional.
#
# Example:
#   matterhorn_mattermost_urlpath: "/mattermost"
#
matterhorn_mattermost_urlpath: ''

# Server password. This option is unsafe to use.
#
# Example:
#   matterhorn_mattermost_pass: "foobar"
#
matterhorn_mattermost_pass: ''

# Password command. Optional. If this and the password option are both
# missing or give the wrong password, you'll be prompted on startup.
#
# You can also just use
#
# matterhorn_mattermost_pass: password
#
# but this is much less secure than supplying a command or being
# prompted interactively.
#
# On Linux, there are a number of options. secret-tool is part of
# libsecret (in libsecret-tools on Ubuntu) and acts as a uniform
# interface to all password managers implementing the LibSecret D-Bus
# API (including kwallet and gnome-keyring). Assuming that you have
# stored a password using
#
# $ secret-tool store --label='matterhorn' matterhorn password
#
# You can then set:
#
# Example:
#   matterhorn_mattermost_passcmd: secret-tool lookup matterhorn password
#
matterhorn_mattermost_passcmd: ''

# Access token token command. Optional. If this is specified, the
# provided command will be executed to obtain an OAuth or Personal
# Access Token that can be used instead of username and password
# credentials for authentication with the Mattermost server. The token
# command takes precedence over username and password configuration
# options, i.e., when a token is specified username and password options
# are ignored. Providing this setting is equivalent to entering a token
# in the login user interface's "Access Token" field.
#
# For details on how to configure your system's keychain, see the
# 'passcmd' documentation above.
#
# The token command functions just like the password command. If you
# have obtained a personal access token and stored it in your keychain,
# you can use it like this:
#
# Example:
#   matterhorn_mattermost_tokencmd: secret-tool lookup matterhorn token
#
matterhorn_mattermost_tokencmd: ''

# OTP token command. Optional. If this is specified, the provided
# command will be executed to obtain OTP token required by matterhorn
# 2FA. Resulting 6 digit code will be inserted into the OTP prompt
# automatically.
#
# Example:
#   matterhorn_mattermost_otptokencmd: secret-tool lookup matterhorn OTP
#
matterhorn_mattermost_otptokencmd: ''

# This optional setting controls how the client displays times.
# The default behavior is "%R".
# If it's empty, that turns timestamps off. Otherwise its value is used as the
# time format string.
#
# The format string is that accepted by 'formatTime':
# https://hackage.haskell.org/package/time-1.6.0.1/docs/Data-Time-Format.html#v:formatTime
#
# Example:
#   matterhorn_timeFormat: %R
#
matterhorn_timeformat: "%R"

# This optional setting controls how the client displays dates.
# The default bahaviour is "%Y-%m-%d". Otherwise its value
# is used as the time format string.
#
# The format string is that accepted by 'formatTime':
# https://hackage.haskell.org/package/time-1.6.0.1/docs/Data-Time-Format.html#v:formatTime
#
# Example:
#   matterhorn_dateformat: %Y-%m-%d
#
matterhorn_dateformat: "%Y-%m-%d"

# Whether to show timestamps on messages.
#
# Example:
#   matterhorn_showmessagetimestamps: true
#
matterhorn_showmessagetimestamps: true

# Whether to re-open a thread that was open the last time Matterhorn
# quit.
#
# Example:
#   matterhorn_showlastopenthread: false
#
matterhorn_showlastopenthread: false

# Theme name
#
# For now, the choices are
#
#   builtin:dark (default)
#   builtin:light
#
# Example:
#   matterhorn_theme: builtin:dark
#
matterhorn_theme: "builtin:dark"

# Theme customization file
#
# This setting is optional. If present, it must either be:
#
# * A relative path to a theme customization file. In this case
#   the relative path is treated as relative to the location of the
#   configuration file. For example, if the Matterhorn configuration
#   file is at $HOME/.config/matterhorn/config.ini and this setting has
#   the value "theme.ini", then Matterhorn will look for this file at
#   $HOME/.config/matterhorn/theme.ini.
# * An absolute path to a theme customization file.
#
# Example:
#   matterhorn_themecustomizationfile: /path/to/file
#
matterhorn_themecustomizationfile: ""


# Smart character pair insertion for "``", "**", and "__".
#
# Allowed values are True and False (case sensitive). Invalid values are
# ignored.
#
# Example:
#   matterhorn_smartbacktick: true
#
matterhorn_smartbacktick: true

# Terminal bell control: ring the terminal bell whenever a new message
# arrives (for use with e.g. terminal multiplexers).
#
# Allowed values are true and false
#
# Example:
#   matterhorn_activityBell: false
#
matterhorn_activitybell: false

# How to truncate long verbatim and code blocks. When set to zero
# (0), no truncation occurs and verbatim and code blocks are
# rendered as-is. When set to any value greater than zero (say N),
# Matterhorn will display only up to N lines of each verbatim or code
# block and will indicates that the block has been truncated. The
# /toggle-truncate-verbatim-blocks command can be used to toggle this
# behavior at runtime.
#
# Allowed values are integers 0 and up
# Default is 0 (no truncation)
#
# Example:
#   matterhorn_truncateverbatimblockheight: 0
#
matterhorn_truncateverbatimblockheight: 0

# Notification script control: run a notification script whenever a new
# message arrives. See the "notify" script in notification-scripts/ for
# an example Linux notification script for version 1 notifications (note
# activityNotifyVersion, below). See the "notifyV2" script for an example
# Linux notification script for version 2 notifications.
#
# See docs/notification-scripts.md for details on the notification script API.
#
# Example:
#   matterhorn_activitynotifycommand: /path/to/notify
#
matterhorn_activitynotifycommand: ""

# Notification script control: select the notifier payload version.
# This affects how the activityNotifyCommand is invoked.
#
# Allowed values are 1 and 2. The default is 1.
#
# Version 1 notifications pass details to the notification script on
# the command line.
# Version 2 notifications invoke the notification script without
# command line parameters; the details are provided as a JSON value
# on standard input.
#
# Example:
#   matterhorn_activitynotifyversion:  1
#
matterhorn_activitynotifyversion: 1

# Background activity display: Matterhorn communicates with the
# Mattermost server using asynchronous background thread processing.
# This parameter can be used to enable a visual display of when and
# how much background activity is occurring. The 'ActiveCount' value
# displays the number of queued work requests to the background thread;
# there may be multiple server messages performed for each work request,
# so this value is just a relative indicator of the amount of work
# pending for processing by this thread.
#
# Allowed values are: Disabled, Active, ActiveCount
#
# Example:
#   matterhorn_showbackgroundactivity: Disabled
#
matterhorn_showbackgroundactivity: Disabled

# The command to use to open attachments and URLs found in chat
# messages.
#
# Matterhorn invokes this command with the URL appended as the last command
# argument. Matterhorn assumes the command will perform the opening
# asynchronously, i.e., Matterhorn assumes the command will return
# immediately after invoking a background process to open the URL. This
# is how OS X's "open" command behaves and is also true for Linux's
# "xdg-open". Matterhorn will also only ever invoke this command for one
# URL at a time. If, for example, the "open all URLs" action is invoked
# on a message with more than one URL, this command will be invoked
# repeatedly, once per URL. The same is true for message attachments.
#
# If the program exits with a non-zero exit status, Matterhorn will
# treat that as a URL opener failure and will report it to you as an
# application error message.
#
# A typical value for this on Linux is: urlOpenCommand = xdg-open
# A more complex alternative: urlOpenCommand: "qutebrowser --backend webengine --no-err-windows -l critical"
#
# Example:
#   matterhorn_urlopencomand: "xdp-open"
#
matterhorn_urlopencommand: ""

# This setting indicates whether the URL-opening command is interactive
# in the terminal. Set this to True if your urlOpenCommand is a terminal
# web browser or other program that needs to control the terminal while
# viewing a URL. Set this to False otherwise.
#
# Example:
#   matterhorn_urlopencommandisinteractive: false
#
matterhorn_urlopencommandisinteractive: false

# Whether to show a message rendering preview.
#
# Example:
#  matterhorn_showmessagepreview:false
#
matterhorn_showmessagepreview: false

# Whether to show the channel list.
#
# Example:
#   matterhorn_showchannellist: true
#
matterhorn_showchannellist: true

# Whether to show more than the first line of the current channel's
# topic if it has multiple lines
#
# Example:
#   matterhorn_showexpandedchanneltopics: true
#
matterhorn_showexpandedchanneltopics: true

# How many days to keep a direct channel in the channel list after the
# last message.
#
# Example:
#   matterhorn_directchannelexpirationdays: 7
#
matterhorn_directchannelexpirationdays: 7

# Whether to enable the spell checker if "aspell" is present on the
# system.
#
# Example:
#   matterhorn_enableAspell: false
#
matterhorn_enableaspell: false

# Name a specific Aspell dictionary to use. See "aspell dicts" for a
# list of available dictionaries on your system.
# The directory must exist and will not be created.
# Default: fall back to environment / locale
#
# Example:
#   matterhorn_aspelldictionary: "/path/to/folder"
#
matterhorn_aspelldictionary: ""

# Force Matterhorn to use HTTP instead of HTTPS. This is mostly included
# for testing purposes; you really should not use this unless you're
# absolutely sure it's what you want, i.e., you run an HTTP server and
# you are aware that doing so means you have no transport security.
#
# Example:
#   matterhorn_unsafeuseunauthenticatedconnection: false
#
matterhorn_unsafeuseunauthenticatedconnection: false

# Whether to validate the server's TLS certificate. It is STRONGLY
# RECOMMENDED to keep this set to its default value of true. Only
# disable this if your server certificate is self-signed or is not
# part of your keychain, and if you are okay with the risk of using an
# untrusted certificate.
#
# Example:
#   matterhorn_validateservercertificate: true
#
matterhorn_validateservercertificate: true

# The width of the channel list (in columns).
#
# Example:
#  matterhorn_channellistwidth: 22
#
matterhorn_channellistwidth: 22

# The orientation of the channel list. Valid values are "left" (the left
# side of the screen) and "right" (the right side of the screen).
#
# Default: left
#
# Example:
#   matterhorn_channelListOrientation: left
#
matterhorn_channellistorientation: left

# The orientation of the thread interface relative to the channel
# message interface. Valid values are "above", "below", "left", and
# "right".
#
# Example:
#   matterhorn_threadorientation: below
#
matterhorn_threadorientation: below

# The maximum size of the internal log buffer, in log entries. This
# buffer is initially flushed to the log file when logging starts.
# Matterhorn keeps these log entries around, discarding old entries to
# keep the buffer from exceeding this size.
#
# Example:
#   matterhorn_logMaxBufferSize = 200
#
matterhorn_logmaxbuffersize: 200
#
# Whether to show indicators on edited messages that have not been
# edited recently.
#
# Example:
#   matterhorn_showolderedits: true
#
matterhorn_showolderedits: true

# Whether to show the indicator wwhen other users are typing.
#
# Example:
#   matterhorn_showtypingindicator: false
#
matterhorn_showtypingindicator: false

# Whether to send notifications to other users when you are typing.
# Default: False
#
# Example:
#   matterhorn_sendtypingnotifications: false
#
matterhorn_sendtypingnotifications: false

# Whether to hyperlink URLs in the terminal. When enabled, this means
# Matterhorn will emit special escape sequences to make URLs clickable.
# Some terminal emulators do not support this feature, and in some of
# those cases the program's output can be garbled so this setting is
# provided for that case.
#
# Example:
#   matterhorn_hyperlinkurls: true
#
matterhorn_hyperlinkurls: true

# The list of directories from which to load Kate XML syntax definitions
# for code block syntax highlighting. The syntax is a colon-separated
# list of paths, with the highest-precedence path appearing first.
#
# where USER_SYNTAX is a special path alias for
# ~/.config/matterhorn/syntax/ and BUNDLED_SYNTAX is a special path
# alias that refers to the path to XML files in the Matterhorn
# distribution relative to the 'matterhorn' binary.
#
# Example:
#   syntaxDirectories:
#     - "/path1"
#     - "/path2"
#     - "/path3"
#
matterhorn_syntaxdirectories: []

# The CPU usage policy for Matterhorn.
#
# Valid values are "single" and "multiple". The default is "multiple".
# If set to "single", the application will be constrained to a single
# CPU. This mode can sometimes result in interface input latency. If set
# to "multiple", the application will use more than one CPU up to an
# application-defined reasonable maximum, or the number of CPUs on the
# host, whichever is smaller.
#
# Example:
#   matterhorn_cpuusagepolicy: multiple
#
matterhorn_cpuusagepolicy: multiple

# The default attachment browser path. Optional.
#
# If this is specified and the directory at this path exists, the
# path will be used as the starting path of the attachment browser.
# If not specified or if the path does not exist, the current working
# directory of matterhorn process will be used as the starting path of
# the attachment browser.
#
# Example:
#   matterhorn_defaultattachmentpath: "/path/to/folder"
#
matterhorn_defaultattachmentpath: ""

# Whether to enable mouse support for matterhorn.
#
# Example:
#   matterhorn_enablemousemode: false
#
matterhorn_enablemousemode: false

# How to sort non-DM channels within channel sidebar groups.
#
# Options:
# - "default" - sort alphabetically with muted channels at the bottom of
#   each group
# - "unread-first" - same as default except that unread channels are
#   displayed at the top of each group
#
# Example:
#   matterhorn_channellistsorting: 'default'
#
matterhorn_channellistsorting: default

# How to sort teams within the team list.
#
# Options:
# - "default" - sort alphabetically and respect team ordering
#   preferences set with /move-team-left and /move-team-right
# - "unread-first" - same as default except that unread teams are
#   displayed first regardless of other ordering considerations
#
# Example:
#   matterhorn_teamlistsorting: 'default'
#
matterhorn_teamlistsorting: 'default'

# Sets the URL For the release of matterhorn on Github.
#
# This url is used to pull the latest release from GitHub and install it
# if the matterhorn_state is set to 'latest' or no rpm is given.
#
# Example:
#   matterhorn_github_release_url: "https://github.com/matterhorn-chat/matterhorn/releases/"
#
matterhorn_github_release_url: "https://api.github.com/repos/matterhorn-chat/matterhorn/releases/latest"
